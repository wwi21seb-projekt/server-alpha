version: '3.8'

services:
  db:
    image: postgres:latest
    env_file:
      - ../.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server_alpha_db.sql:/docker-entrypoint-initdb.d/initdb.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: "${SERVER_IMAGE:-ghcr.io/wwi21seb-projekt/server-alpha:main}" # It's possible to specify the image to use in the environment, default is the latest image from the github container registry
    user: ${UID}:${GID}
    depends_on:
      - db
    env_file:
      - ../.env
    environment:
      - ENVIRONMENT=development
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ${PWD}/private_key.pem:/private_key.pem
      - ${PWD}/public_key.pem:/public_key.pem
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://app:8080/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:latest
    ports:
      - "${LOKI_PORT}:3100"

  grafana-agent:
    image: grafana/agent:latest
    volumes:
      - /configs/grafana-agent.yaml:/etc/agent-config.yaml
    command: "-config.file=/etc/agent-config.yaml"
    depends_on:
      - loki
    environment:
      - HOSTNAME=localhost
    ports:
      - "${AGENT_PORT}:3101"

volumes:
  db_data: