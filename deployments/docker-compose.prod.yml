version: '3.8'

services:
  db:
    image: postgres:latest
    env_file:
      - ../.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server_alpha_db.sql:/docker-entrypoint-initdb.d/initdb.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: "${SERVER_IMAGE:-ghcr.io/wwi21seb-projekt/server-alpha:main}" # It's possible to specify the image to use in the environment, default is the latest image from the github container registry
    user: ${UID}:${GID}
    restart: unless-stopped # Restart the container unless it was stopped by the user
    depends_on:
      - db
    env_file:
      - ../.env
    environment:
      - ENVIRONMENT=production
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
    volumes:
      - ${PWD}/private_key.pem:/private_key.pem
      - ${PWD}/public_key.pem:/public_key.pem
    networks:
      - traefik_proxy
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alpha.entrypoints=websecure"
      - "traefik.http.routers.alpha.rule=Host(`server-alpha.tech`)"
      - "traefik.http.routers.alpha.tls=true"
      - "traefik.http.routers.alpha.tls.certresolver=default"
      - "traefik.http.routers.alpha.middlewares=secHeaders@file"
      - "traefik.http.services.alpha.loadbalancer.server.port=8080" # Nicht den Host-Port verwenden sondern den internen Container port!
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://app:8080/health || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

volumes:
  db_data: